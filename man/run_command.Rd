% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cmd.R
\name{run_command}
\alias{run_command}
\title{Execute command with additional environments}
\usage{
run_command(
  command,
  shell = c("bash", "zsh", "csh", "tcsh"),
  use_glue = TRUE,
  enable_conda = TRUE,
  stdout = "",
  stderr = "",
  stdin = "",
  input = NULL,
  env = character(),
  wait = TRUE,
  timeout = 0,
  ...,
  workdir = getwd(),
  dry_run = FALSE,
  print_cmd = dry_run,
  glue_env = parent.frame()
)
}
\arguments{
\item{command}{system command}

\item{shell}{shell type}

\item{use_glue}{whether to \code{\link[glue]{glue}} the command}

\item{enable_conda}{whether to activate 'conda'}

\item{stdout, stderr, stdin, input, env, wait, timeout, ...}{passed to
\code{\link{system2}}}

\item{workdir}{the working directory}

\item{dry_run}{whether to dry-run the command (do not execute, simply
returns the command), useful to debug}

\item{print_cmd}{whether to print the command out}

\item{glue_env}{the environment to evaluate variables when \code{use_glue}
is true}
}
\value{
The built command.
}
\description{
Enables 'conda' environment
}
\examples{

run_command("conda install -y numpy", dry_run = TRUE)


a <- "This is a message"
run_command('echo "{a}"', dry_run = TRUE, enable_conda = FALSE)


\dontrun{

# Runs on linux/osx

run_command("which conda")

# Use `jupyter_launch()` instead. This is just a demonstration
run_command("jupyter notebook")

}

}
