[{"path":"http://dipterix.org/rpymat/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 http://www.apache.org/licenses/","code":""},{"path":[]},{"path":"http://dipterix.org/rpymat/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"http://dipterix.org/rpymat/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"http://dipterix.org/rpymat/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"http://dipterix.org/rpymat/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"http://dipterix.org/rpymat/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"http://dipterix.org/rpymat/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"http://dipterix.org/rpymat/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"http://dipterix.org/rpymat/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"http://dipterix.org/rpymat/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"http://dipterix.org/rpymat/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"http://dipterix.org/rpymat/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zhengjia Wang. Copyright holder, author, maintainer.","code":""},{"path":"http://dipterix.org/rpymat/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang Z (2023). rpymat: Easy Configure Isolated 'Python' Environment. https://github.com/dipterix/rpymat, http://dipterix.org/rpymat/.","code":"@Manual{,   title = {rpymat: Easy to Configure an Isolated 'Python' Environment},   author = {Zhengjia Wang},   year = {2023},   note = {https://github.com/dipterix/rpymat, http://dipterix.org/rpymat/}, }"},{"path":"http://dipterix.org/rpymat/index.html","id":"isolated-miniconda-python-and-matlab-experimental-environment","dir":"","previous_headings":"","what":"Easy to Configure an Isolated Python Environment","title":"Easy to Configure an Isolated Python Environment","text":"goal rpymat create single isolated Miniconda Python environment reproducible pipeline scripts. package shell reticulate package, provides stable behaviors, especially ‘ARM’ machines.","code":""},{"path":"http://dipterix.org/rpymat/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Easy to Configure an Isolated Python Environment","text":"can install released version rpymat CRAN :","code":"install.packages(\"rpymat\")"},{"path":"http://dipterix.org/rpymat/index.html","id":"configure-environment","dir":"","previous_headings":"","what":"Configure environment","title":"Easy to Configure an Isolated Python Environment","text":"Configure python installation Add Python conda packages","code":"# change `python_ver` accordingly rpymat::configure_conda(python_ver = 'auto') # Add conda packages rpymat::add_packages(c('pandas', 'numpy'))  # Add conda packages from channels rpymat::add_packages(c('h5py'), channel = \"conda-forge\")  # Add pip packages rpymat::add_packages(c('sklearn'), pip = TRUE)"},{"path":"http://dipterix.org/rpymat/index.html","id":"use-jupyterlab","dir":"","previous_headings":"","what":"Use Jupyterlab","title":"Easy to Configure an Isolated Python Environment","text":"","code":"# Install Jupyterlab, will install # numpy, h5py, matplotlib, pandas,  # jupyter, jupyterlab, jupyterlab-git, ipywidgets, jupyter-server-proxy # jupyterlab_latex, jupyterlab_github, matlab_kernel rpymat::add_jupyter()  # Launch Jupyterlab rpymat::jupyter_launch(async = FALSE)"},{"path":"http://dipterix.org/rpymat/index.html","id":"advanced-configurations","dir":"","previous_headings":"Use Jupyterlab","what":"Advanced configurations:","title":"Easy to Configure an Isolated Python Environment","text":"query existing servers stop server","code":"# Async option is only available in RStudio >= 1.4 async <- rstudioapi::isAvailable(version_needed = \"1.4\")   rpymat::jupyter_launch(     async = async, workdir = \"~\",     port = 18888, open_browser = TRUE,     token = \"IwontTellYouMyToken\" ) rpymat::jupyter_server_list() #>        host  port                                              token #> 1 127.0.0.1  8888 3hzWfGPa0EOmonaNS48jrTvpw07KiX7VKerA9ZTFJMkCOJMgfB #> 2 127.0.0.1 18888                                IwontTellYouMyToken rpymat::jupyter_server_stop(port = 18888)"},{"path":"http://dipterix.org/rpymat/index.html","id":"use-rpymat-with-reticulate","dir":"","previous_headings":"","what":"Use rpymat with reticulate","title":"Easy to Configure an Isolated Python Environment","text":"run python code interactively. Alternatively, can use rpymat::run_script(path) execute Python scripts, use reticulate::py obtain results.","code":"# Initialize the isolated environment  rpymat::ensure_rpymat()  rpymat::repl_python()"},{"path":[]},{"path":"http://dipterix.org/rpymat/index.html","id":"uninstall","dir":"","previous_headings":"","what":"Uninstall","title":"Easy to Configure an Isolated Python Environment","text":"following command erase environment completely.","code":"rpymat::remove_conda()"},{"path":"http://dipterix.org/rpymat/reference/conda-env.html","id":null,"dir":"Reference","previous_headings":"","what":"'Miniconda' environment — conda-env","title":"'Miniconda' environment — conda-env","text":"functions/variables used configure 'Miniconda' environment.","code":""},{"path":"http://dipterix.org/rpymat/reference/conda-env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'Miniconda' environment — conda-env","text":"","code":"CONDAENV_NAME(env_name)  conda_path()  conda_bin()  env_path()  list_pkgs(...)  configure_matlab(matlab, python_ver = \"auto\")  configure_conda(   python_ver = \"auto\",   packages = NULL,   matlab = NULL,   update = FALSE,   force = FALSE )  remove_conda(ask = TRUE)  add_packages(packages = NULL, python_ver = \"auto\", ...)  ensure_rpymat(verbose = TRUE)  matlab_engine()  call_matlab(   fun,   ...,   .options = getOption(\"rpymat.matlab_opt\", \"-nodesktop -nojvm\"),   .debug = getOption(\"rpymat.debug\", FALSE) )"},{"path":"http://dipterix.org/rpymat/reference/conda-env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'Miniconda' environment — conda-env","text":"env_name alternative environment name use; default \"rpymat-conda-env\" ... add_packages, additional parameters passing conda_install; call_matlab, ... parameters passing fun matlab 'Matlab' path add configuration path; see 'Details' python_ver python version use; see 'Configuration' packages additional python conda packages install update whether update conda; default false force whether force install 'Miniconda' even previous version exists; default false. Setting false=TRUE rarely works. Please see 'Configuration'. ask whether ask user's agreement remove repository. parameter true functions depend remove_conda (see 'CRAN Repository Policy'). argument might removed force interactive future. verbose whether print messages fun 'Matlab' function name, character (experimental) .options 'Matlab' compiler options .debug whether enable debug mode","code":""},{"path":"http://dipterix.org/rpymat/reference/conda-env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'Miniconda' environment — conda-env","text":"None","code":""},{"path":"http://dipterix.org/rpymat/reference/conda-env.html","id":"background-amp-objectives","dir":"Reference","previous_headings":"","what":"Background & Objectives","title":"'Miniconda' environment — conda-env","text":"Package reticulate provides sophisticated tool-sets allow us call python functions within R. However, installation 'Miniconda' python can tricky many platforms, example, 'M1' chip, 'ARM' machines. package rpymat provides easier approach configure machines totally isolated environments. modifications environment affect set ups. Since 2014, 'Matlab' introduced official compiler python. package rpymat provides simple approach link compiler, provided proper versions 'Matlab' installed. list 'Matlab' versions official compilers corresponding python versions.","code":""},{"path":"http://dipterix.org/rpymat/reference/conda-env.html","id":"configuration","dir":"Reference","previous_headings":"","what":"Configuration","title":"'Miniconda' environment — conda-env","text":"'Matlab' compiler installed, cases, function configure_conda default arguments automatically downloads latest 'Miniconda' configures latest python. versions 'Miniconda' installed, please set options \"reticulate.miniconda.url\" change source location. 'Matlab' installed, please specify 'Matlab' path running configure_conda. environment setup, configure_matlab can link 'Matlab' compilers without removing existing environment. 'ARM' users, unfortunately, 'Matlab' support compilers written 'Intel' chips.","code":""},{"path":"http://dipterix.org/rpymat/reference/conda-env.html","id":"initialization","dir":"Reference","previous_headings":"","what":"Initialization","title":"'Miniconda' environment — conda-env","text":"conda python environment installed, make sure run ensure_rpymat() running python code. function make sure correct compiler linked current R session.","code":""},{"path":"http://dipterix.org/rpymat/reference/conda-env.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'Miniconda' environment — conda-env","text":"","code":"# The script will interactively install \\code{conda} to `R_user_dir` if (FALSE) {  # Install conda and python 3.9  configure_conda(python_ver = '3.9')   # Add packages h5py, pandas, jupyter  add_packages(c('h5py', 'pandas', 'jupyter'))  # Add pip packages  add_packages(\"itk\", pip = TRUE)  # Initialize the isolated environment  ensure_rpymat()   # Remove the environment  remove_conda()  }"},{"path":"http://dipterix.org/rpymat/reference/jupyter.html","id":null,"dir":"Reference","previous_headings":"","what":"Install, register, launch 'Jupyter' notebook to the virtual environment — jupyter","title":"Install, register, launch 'Jupyter' notebook to the virtual environment — jupyter","text":"Install, register, launch 'Jupyter' notebook virtual environment","code":""},{"path":"http://dipterix.org/rpymat/reference/jupyter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install, register, launch 'Jupyter' notebook to the virtual environment — jupyter","text":"","code":"add_jupyter(..., register_R = TRUE)  jupyter_bin()  jupyter_register_R(   user = NULL,   name = \"ir\",   displayname = \"R\",   rprofile = NULL,   prefix = NULL,   sys_prefix = NULL,   verbose = getOption(\"verbose\") )  jupyter_options(   root_dir,   host = \"127.0.0.1\",   port = 8888,   open_browser = FALSE,   token = rand_string() )  jupyter_launch(   host = \"127.0.0.1\",   port = 8888,   open_browser = TRUE,   workdir = getwd(),   async = FALSE,   ...,   dry_run = FALSE )  jupyter_check_launch(   port = 8888,   host = \"127.0.0.1\",   open_browser = TRUE,   workdir = getwd(),   async = \"auto\",   ... )  jupyter_server_list()  jupyter_server_stop(port, ...)  jupyter_server_stop_all(...)"},{"path":"http://dipterix.org/rpymat/reference/jupyter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install, register, launch 'Jupyter' notebook to the virtual environment — jupyter","text":"... add_jupyter, additional parameters passed jupyter_register_R; jupyter_launch, additional parameters passed jupyter_options register_R whether register IRkernel notebook user, name, displayname, rprofile, prefix, sys_prefix, verbose see installspec root_dir, workdir default root directory notebook host, port 'IP' port hosting 'URL' open_browser whether open browser launched token access token notebook async whether open notebook background dry_run whether display command instead executing ; used debug code","code":""},{"path":"http://dipterix.org/rpymat/reference/jupyter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install, register, launch 'Jupyter' notebook to the virtual environment — jupyter","text":"jupyter_bin returns 'Jupyter' notebook binary path; jupyter_options returns 'Jupyter' configuration strings; jupyter_server_list returns table existing local 'Jupyter' server hosts, ports, tokens; jupyter_check_launch returns true new server created, false existing server port; functions return nothing.","code":""},{"path":"http://dipterix.org/rpymat/reference/jupyter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install, register, launch 'Jupyter' notebook to the virtual environment — jupyter","text":"","code":"if (FALSE) {  # Requires installation of conda library(rpymat)  # Install conda, if you have done so, skip configure_conda()   # Install Jupyter notebook add_jupyter(register_R = TRUE)   # Utility functions jupyter_bin()  # Please install `dipsaus` package to enable `async=TRUE` with # better experience jupyter_launch(async = FALSE, open_browser = TRUE)   }"},{"path":"http://dipterix.org/rpymat/reference/repl_python.html","id":null,"dir":"Reference","previous_headings":"","what":"Enable interactive 'python' from R — repl_python","title":"Enable interactive 'python' from R — repl_python","text":"Allows users type 'python' command R console quick code evaluation debugging.","code":""},{"path":"http://dipterix.org/rpymat/reference/repl_python.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enable interactive 'python' from R — repl_python","text":"","code":"repl_python(...)"},{"path":"http://dipterix.org/rpymat/reference/repl_python.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enable interactive 'python' from R — repl_python","text":"... passed repl_python 'reticulate' package","code":""},{"path":"http://dipterix.org/rpymat/reference/repl_python.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enable interactive 'python' from R — repl_python","text":"See repl_python","code":""},{"path":"http://dipterix.org/rpymat/reference/run_command.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute command with additional environments — run_command","title":"Execute command with additional environments — run_command","text":"Enables 'conda' environment","code":""},{"path":"http://dipterix.org/rpymat/reference/run_command.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute command with additional environments — run_command","text":"","code":"cmd_create(command, shell, use_glue = TRUE)  cmd_set_env(command, key, value, quote = TRUE, quote_type = \"cmd\")  cmd_set_workdir(command, workdir)  cmd_set_conda(command, conda_path, env_path)  cmd_build(command, .env = parent.frame(), ...)  detect_shell(suggest = NULL)  run_command(   command,   shell = detect_shell(),   use_glue = FALSE,   enable_conda = TRUE,   stdout = \"\",   stderr = \"\",   stdin = \"\",   input = NULL,   env_list = list(),   wait = TRUE,   timeout = 0,   ...,   workdir = getwd(),   dry_run = FALSE,   print_cmd = dry_run,   glue_env = parent.frame() )"},{"path":"http://dipterix.org/rpymat/reference/run_command.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute command with additional environments — run_command","text":"command system command shell shell type use_glue whether glue command; default false key, value environment variable key value quote, quote_type whether quote environment variables quote type use; see shQuote workdir working directory conda_path 'conda' path; default conda_path env_path 'conda' environment path; default env_path suggest suggested shell type; default 'cmd' windows, 'bash' others enable_conda whether activate 'conda' stdout, stderr, stdin, input, wait, timeout, ... passed system2 env_list key-value pairs environment variables dry_run whether dry-run command (execute, simply returns command), useful debug print_cmd whether print command glue_env, .env environment evaluate variables use_glue true","code":""},{"path":"http://dipterix.org/rpymat/reference/run_command.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute command with additional environments — run_command","text":"functions return list class rpymat_system_command except run_command, returns exit code system2.","code":""},{"path":"http://dipterix.org/rpymat/reference/run_command.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute command with additional environments — run_command","text":"","code":"run_command(\"conda install -y numpy\", dry_run = TRUE) #> Warning: path[1]=\"/usr/share/miniconda/bin/conda/../..\": Not a directory #> #!/usr/bin/env bash #> cd '/home/runner/work/rpymat/rpymat/docs/reference' #> if [ -f \"/usr/share/miniconda/bin/conda/../../etc/profile.d/conda.sh\" ]; then #>   . \"/usr/share/miniconda/bin/conda/../../etc/profile.d/conda.sh\" #> else #>   export PATH=\"/usr/share/miniconda/bin/conda/../../bin:$PATH\" #> fi #>  #> conda activate \"/home/runner/.local/share/r-rpymat/miniconda/envs/rpymat-conda-env\" #> cd '/home/runner/work/rpymat/rpymat/docs/reference' #>  #>  #> conda install -y numpy   a <- \"This is a message\" run_command('echo \"{a}\"', dry_run = TRUE,             enable_conda = FALSE, use_glue = TRUE) #> #!/usr/bin/env bash #> cd '/home/runner/work/rpymat/rpymat/docs/reference' #> cd '/home/runner/work/rpymat/rpymat/docs/reference' #>  #>  #> echo \"This is a message\"   if (FALSE) {  # Use `jupyter_launch()` instead. This is just a demonstration run_command('\"{jupyter_bin()}\" server list', use_glue = TRUE)  }"},{"path":"http://dipterix.org/rpymat/reference/run_script.html","id":null,"dir":"Reference","previous_headings":"","what":"Run 'Python' script — run_script","title":"Run 'Python' script — run_script","text":"wrapper py_run_file, rpymat enabled","code":""},{"path":"http://dipterix.org/rpymat/reference/run_script.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run 'Python' script — run_script","text":"","code":"run_script(x, work_dir = NULL, local = FALSE, convert = FALSE)"},{"path":"http://dipterix.org/rpymat/reference/run_script.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run 'Python' script — run_script","text":"x script path work_dir working directory script local, convert passed py_run_file","code":""},{"path":"http://dipterix.org/rpymat/reference/run_script.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run 'Python' script — run_script","text":"values returned py_run_file","code":""},{"path":"http://dipterix.org/rpymat/reference/run_script.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run 'Python' script — run_script","text":"","code":"if (FALSE) {  # Please configure conda environment first  x <- tempfile() writeLines(c(   \"import re\",   \"zipcode = re.findall(r'[0-9]{5,6}', r.address)\" ), con = x)  address <- '2341 Main St., 72381' rpymat::run_script(x)  py$zipcode  }"},{"path":"http://dipterix.org/rpymat/news/index.html","id":"rpymat-014","dir":"Changelog","previous_headings":"","what":"rpymat 0.1.4","title":"rpymat 0.1.4","text":"Muffled conda information running Python code scripts Ported reticulate::repl_python function Allowed users list installed packages Allowed jupyter run background RStudio jobs Removed optional jupyter add-packages installation script","code":""},{"path":"http://dipterix.org/rpymat/news/index.html","id":"rpymat-013","dir":"Changelog","previous_headings":"","what":"rpymat 0.1.3","title":"rpymat 0.1.3","text":"CRAN release: 2022-08-06 Fixed command-line script failing load conda Allowed use miniconda installed user’s home directory Use slash instead backslash Windows system avoid escaping issues","code":""},{"path":"http://dipterix.org/rpymat/news/index.html","id":"rpymat-012","dir":"Changelog","previous_headings":"","what":"rpymat 0.1.2","title":"rpymat 0.1.2","text":"CRAN release: 2022-02-19 Fixed BLAS issues Unix systems Added Windows support Added support install, configure, launch, stop Jupyterlab Added run_command invoke enhanced system command conda environment","code":""},{"path":"http://dipterix.org/rpymat/news/index.html","id":"rpymat-011","dir":"Changelog","previous_headings":"","what":"rpymat 0.1.1","title":"rpymat 0.1.1","text":"CRAN release: 2021-11-15 Added NEWS.md file track changes package.","code":""}]
